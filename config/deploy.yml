# Name of your application. Used to uniquely configure containers.
service: blogdhh

# Name of the container image.
image: talha/blogdhh

# Deploy to these servers.
servers:
  web:
    hosts:
      - 178.62.207.137
    labels:
      traefik.http.routers.blogdhh.rule: Host(`ddz.art`)
      traefik.http.routers.blogdhh.entrypoints: websecure
      traefik.http.routers.blogdhh_secure.rule: Host(`ddz.art`)
      traefik.http.routers.blogdhh_secure.tls: true
      traefik.http.routers.blogdhh_secure.tls.certresolver: letsencrypt
    options:
      network: "private"

# Credentials for your image host.
registry:
  username:
    - KAMAL_REGISTRY_USERNAME
  password:
    - KAMAL_REGISTRY_PASSWORD

# Inject ENV variables into containers (secrets come from .env).
# Remember to run `kamal env push` after making changes!
env:
  clear:
    RAILS_ENV: production
    RACK_ENV: production
    RAILS_LOG_TO_STDOUT: true
    RAILS_SERVE_STATIC_FILES: true
  secret:
    - RAILS_MASTER_KEY
    - SMTP_PASSWORD
    - SMTP_SERVER
    - SMTP_LOGIN
    - DB_HOST
    - POSTGRES_USER
    - POSTGRES_PASSWORD

# Use a different ssh user than root
ssh:
  user: deploy

# Configure builder setup.
builder:
  remote:
    arch: amd64

# Use accessory services (secrets come from .env).
accessories:
  db:
    image: postgres:16.0
    host: 178.62.207.137
    env:
      clear:
        POSTGRES_USER: "blogdhh"
        POSTGRES_DB: 'blogdhh_production'
      secret:
        - POSTGRES_PASSWORD
        - POSTGRES_USER
    files:
      - config/init.sql:/docker-entrypoint-initdb.d/setup.sql
    directories:
      - data:/var/lib/postgresql/data
    options:
      network: "private"

traefik:
  options:
    publish:
      - "443:443"
    volume:
      - "/letsencrypt/acme.json:/letsencrypt/acme.json"
    network: "private"
  args:
    entryPoints.web.address: ":80"
    entryPoints.websecure.address: ":443"
    entryPoints.web.http.redirections.entryPoint.to: websecure
    entryPoints.web.http.redirections.entryPoint.scheme: https
    entryPoints.web.http.redirections.entrypoint.permanent: true
    certificatesResolvers.letsencrypt.acme.email: "xmaximin@gmail.com"
    certificatesResolvers.letsencrypt.acme.storage: "/letsencrypt/acme.json"
    certificatesResolvers.letsencrypt.acme.httpchallenge: true
    certificatesResolvers.letsencrypt.acme.httpchallenge.entrypoint: web

asset_path: /rails/public/assets